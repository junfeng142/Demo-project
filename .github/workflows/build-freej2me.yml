name: freej2me-jar Build

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/aweigit/freej2me-miyoomini.git
  REPO_BRANCH: master
  PKG_NAME: freej2me
  BIN_DIR: /
  CONFIG_FILE: configs/freej2me.config
  DIY_SH: configs/diy.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      
    - name: Initialization environment
      run: |
        sudo sed -i 's/# \(en_US.UTF-8\)/\1/' /etc/locale.gen
        sudo locale-gen --purge --lang en_US.UTF-8
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH $PKG_NAME
        ln -sf /workdir/$PKG_NAME $GITHUB_WORKSPACE/$PKG_NAME

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $PKG_NAME/.config
        mv configs/*.patch $PKG_NAME/
        chmod +x $DIY_SH
        cd $PKG_NAME
        $GITHUB_WORKSPACE/$DIY_SH

    - name: Compile the firmware
      id: compile
      run: |
        cd $PKG_NAME
        ant -noinput -buildfile build.xml
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DEVICE_NAME=$PKG_NAME" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd $PKG_NAME/build
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*.opk
