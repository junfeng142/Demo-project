diff -uprN a/Makefile b/Makefile
--- a/Makefile	2025-01-22 13:24:29.381775617 +0800
+++ b/Makefile	2025-01-22 13:23:53.587117687 +0800
@@ -2,7 +2,7 @@ $(LD) ?= $(CC)
 TARGET ?= picodrive
 ASAN ?= 0
 DEBUG ?= 0
-CFLAGS += -I.
+CFLAGS += -I$(PWD)
 CYCLONE_CC ?= gcc
 CYCLONE_CXX ?= g++
 
diff -uprN a/config.mak b/config.mak
--- a/config.mak	1970-01-01 08:00:00.000000000 +0800
+++ b/config.mak	2025-01-22 13:23:53.587117687 +0800
@@ -0,0 +1,15 @@
+# Automatically generated by configure
+# Configured with: './configure' '--platform=generic' '--sound-drivers=sdl'
+CC = /opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-gcc
+CXX = /opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-g++
+AS = /opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-as
+STRIP = /opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-strip
+LD = /opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-gcc
+CFLAGS += -march=armv7-a+neon-vfpv4 -mtune=cortex-a7 -mfpu=neon-vfpv4 -mvectorize-with-neon-quad -D__GENERIC__ -I/opt/FunKey-sdk-2.3.0/arm-funkey-linux-gnueabihf/sysroot/usr/bin/../../usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -Wno-unused-result
+ASFLAGS +=  -mfpu=neon -mfloat-abi=hard
+LDFLAGS += 
+LDLIBS += -L/opt/FunKey-sdk-2.3.0/arm-funkey-linux-gnueabihf/sysroot/usr/bin/../../usr/lib -lSDL -lpthread -lpng  -lm -lz -ldl
+
+ARCH = arm
+PLATFORM = generic
+SOUND_DRIVERS = sdl
diff -uprN a/configure b/configure
--- a/configure	2025-01-22 13:24:29.381775617 +0800
+++ b/configure	2025-01-22 13:23:53.587117687 +0800
@@ -55,6 +55,7 @@ need_sdl="no"
 need_zlib="no"
 
 # hardcoded stuff
+CROSS_COMPILE="/opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-"
 CC="${CC-${CROSS_COMPILE}gcc}"
 CXX="${CXX-${CROSS_COMPILE}g++}"
 AS="${AS-${CROSS_COMPILE}as}"
diff -uprN a/platform/common/inputmap_kbd.c b/platform/common/inputmap_kbd.c
--- a/platform/common/inputmap_kbd.c	2025-01-22 13:24:37.417474335 +0800
+++ b/platform/common/inputmap_kbd.c	2025-01-22 13:23:53.623116337 +0800
@@ -8,19 +8,19 @@
 #include "../common/plat_sdl.h"
 
 const struct in_default_bind _in_sdl_defbinds[] = {
-	{ SDLK_UP,     IN_BINDTYPE_PLAYER12, GBTN_UP },
-	{ SDLK_DOWN,   IN_BINDTYPE_PLAYER12, GBTN_DOWN },
-	{ SDLK_LEFT,   IN_BINDTYPE_PLAYER12, GBTN_LEFT },
-	{ SDLK_RIGHT,  IN_BINDTYPE_PLAYER12, GBTN_RIGHT },
-	{ SDLK_z,      IN_BINDTYPE_PLAYER12, GBTN_A },
-	{ SDLK_x,      IN_BINDTYPE_PLAYER12, GBTN_B },
-	{ SDLK_c,      IN_BINDTYPE_PLAYER12, GBTN_C },
-	{ SDLK_a,      IN_BINDTYPE_PLAYER12, GBTN_X },
-	{ SDLK_s,      IN_BINDTYPE_PLAYER12, GBTN_Y },
-	{ SDLK_d,      IN_BINDTYPE_PLAYER12, GBTN_Z },
-	{ SDLK_RETURN, IN_BINDTYPE_PLAYER12, GBTN_START },
-	{ SDLK_f,      IN_BINDTYPE_PLAYER12, GBTN_MODE },
-	{ SDLK_ESCAPE, IN_BINDTYPE_EMU, PEVB_MENU },
+	{ SDLK_u,     IN_BINDTYPE_PLAYER12, GBTN_UP },
+	{ SDLK_d,   IN_BINDTYPE_PLAYER12, GBTN_DOWN },
+	{ SDLK_l,   IN_BINDTYPE_PLAYER12, GBTN_LEFT },
+	{ SDLK_r,  IN_BINDTYPE_PLAYER12, GBTN_RIGHT },
+	{ SDLK_a,      IN_BINDTYPE_PLAYER12, GBTN_A },
+	{ SDLK_b,      IN_BINDTYPE_PLAYER12, GBTN_B },
+	{ SDLK_m,      IN_BINDTYPE_PLAYER12, GBTN_C },
+	{ SDLK_x,      IN_BINDTYPE_PLAYER12, GBTN_X },
+	{ SDLK_y,      IN_BINDTYPE_PLAYER12, GBTN_Y },
+	{ SDLK_n,      IN_BINDTYPE_PLAYER12, GBTN_Z },
+	{ SDLK_s,      IN_BINDTYPE_PLAYER12, GBTN_START },
+	{ SDLK_k,      IN_BINDTYPE_PLAYER12, GBTN_MODE },
+	{ SDLK_q,      IN_BINDTYPE_EMU, PEVB_MENU },
 	{ SDLK_TAB,    IN_BINDTYPE_EMU, PEVB_RESET },
 	{ SDLK_F1,     IN_BINDTYPE_EMU, PEVB_STATE_SAVE },
 	{ SDLK_F2,     IN_BINDTYPE_EMU, PEVB_STATE_LOAD },
@@ -38,25 +38,25 @@ const struct in_default_bind _in_sdl_def
 const struct in_default_bind *in_sdl_defbinds = _in_sdl_defbinds;
 
 const struct menu_keymap _in_sdl_key_map[] = {
-	{ SDLK_UP,	PBTN_UP },
-	{ SDLK_DOWN,	PBTN_DOWN },
-	{ SDLK_LEFT,	PBTN_LEFT },
-	{ SDLK_RIGHT,	PBTN_RIGHT },
-	{ SDLK_RETURN,	PBTN_MOK },
-	{ SDLK_ESCAPE,	PBTN_MBACK },
-	{ SDLK_COMMA,	PBTN_MA2 },
-	{ SDLK_PERIOD,	PBTN_MA3 },
-	{ SDLK_TAB,	PBTN_R },
-	{ SDLK_BACKSPACE, PBTN_L },
+	{ SDLK_u,	PBTN_UP },
+	{ SDLK_d,	PBTN_DOWN },
+	{ SDLK_l,	PBTN_LEFT },
+	{ SDLK_r,	PBTN_RIGHT },
+	{ SDLK_a,	PBTN_MOK },
+	{ SDLK_b,	PBTN_MBACK },
+	{ SDLK_x,	PBTN_MA2 },
+	{ SDLK_y,	PBTN_MA3 },
+	{ SDLK_n,	PBTN_R },
+	{ SDLK_m,   PBTN_L },
 };
 const int in_sdl_key_map_sz = sizeof(_in_sdl_key_map) / sizeof(_in_sdl_key_map[0]);
 const struct menu_keymap *in_sdl_key_map = _in_sdl_key_map;
 
 const struct menu_keymap _in_sdl_joy_map[] = {
-	{ SDLK_UP,	PBTN_UP },
-	{ SDLK_DOWN,	PBTN_DOWN },
-	{ SDLK_LEFT,	PBTN_LEFT },
-	{ SDLK_RIGHT,	PBTN_RIGHT },
+	{ SDLK_u,	PBTN_UP },
+	{ SDLK_d,	PBTN_DOWN },
+	{ SDLK_l,	PBTN_LEFT },
+	{ SDLK_r,	PBTN_RIGHT },
 	/* joystick */
 	{ SDLK_WORLD_0,	PBTN_MOK },
 	{ SDLK_WORLD_1,	PBTN_MBACK },
