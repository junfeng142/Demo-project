diff -uprN a/Makefile b/Makefile
--- a/Makefile	2025-05-16 12:53:21.273486127 +0800
+++ b/Makefile	2025-05-16 13:00:33.955849111 +0800
@@ -371,8 +371,8 @@ OBJS += frontend/plat_suniv.o
 frontend/main.o frontend/menu.o: CFLAGS += -include frontend/320240/ui_miyoo.h
 USE_PLUGIN_LIB = 1
 USE_FRONTEND = 1
-CFLAGS += $(shell /opt/miyoo/arm-miyoo-linux-musleabi/sysroot/usr/bin/sdl-config --cflags) -DMIYOO
-LDFLAGS += $(shell /opt/miyoo/arm-miyoo-linux-musleabi/sysroot/usr/bin/sdl-config --libs)
+CFLAGS += $(shell /opt/FunKey-sdk-2.3.0/arm-funkey-linux-gnueabihf/sysroot/usr/bin/sdl-config --cflags) -DMIYOO
+LDFLAGS += $(shell /opt/FunKey-sdk-2.3.0/arm-funkey-linux-gnueabihf/sysroot/usr/bin/sdl-config --libs)
 endif
 ifeq "$(PLATFORM)" "maemo"
 OBJS += maemo/hildon.o maemo/main.o maemo/maemo_xkb.o frontend/pl_gun_ts.o
diff -uprN a/configure b/configure
--- a/configure	2025-05-16 12:53:21.273486127 +0800
+++ b/configure	2025-05-16 13:03:15.501262887 +0800
@@ -68,27 +68,14 @@ optimize_cortexa8="no"
 optimize_arm926ej="no"
 
 # hardcoded stuff
-if [ "${OSTYPE}" = "FreeBSD" ]; then
-	CC="clang"
-	CXX="clang++"
-	CFLAGS="-I/usr/local/include -L/usr/local/lib"
-	MAKE=gmake
-else
-	CC="${CC-${CROSS_COMPILE}gcc}"
-	CXX="${CXX-${CROSS_COMPILE}g++}"
-fi
-AS="${AS-${CROSS_COMPILE}as}"
-AR="${AS-${CROSS_COMPILE}ar}"
-MAIN_LDLIBS="$LDLIBS -ldl -lm -lpthread"
+CC="/opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-gcc"
+CXX="/opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-g++"
+AS="/opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-as"
+AR="/opt/FunKey-sdk-2.3.0/bin/arm-funkey-linux-gnueabihf-ar"
+MAIN_LDLIBS="$LDLIBS -lSDL_ttf -lSDL_image -ldl -lm -lpthread"
 config_mak="config.mak"
-
-if [ "${OSTYPE}" = "FreeBSD" ]; then
-	SYSROOT="$sysroot"
-	[ "x${SDL_CONFIG}" = "x" ] && SDL_CONFIG="${SYSROOT}/usr/local/bin/sdl-config"
-else
-	SYSROOT="$(${CC} --print-sysroot)"
-	[ "x${SDL_CONFIG}" = "x" ] && SDL_CONFIG="${SYSROOT}/usr/bin/sdl-config"
-fi
+CFLAGS="-Os -march=armv7-a "
+SDL_CONFIG=/opt/FunKey-sdk-2.3.0/arm-funkey-linux-gnueabihf/sysroot/usr/bin/sdl-config
 
 fail()
 {
diff -uprN a/frontend/main.c b/frontend/main.c
--- a/frontend/main.c	2025-05-16 12:53:52.632208054 +0800
+++ b/frontend/main.c	2025-05-16 13:25:10.716321201 +0800
@@ -74,9 +74,9 @@ int hud_new_msg;
 static inline void make_path(char *buf, size_t size, const char *dir, const char *fname)
 {
 	if (fname)
-		snprintf(buf, size, ".%s%s", dir, fname);
+		snprintf(buf, size, "%s%s", dir, fname);
 	else
-		snprintf(buf, size, ".%s", dir);
+		snprintf(buf, size, "%s", dir);
 }
 #define MAKE_PATH(buf, dir, fname) \
 	make_path(buf, sizeof(buf), dir, fname)
@@ -576,7 +576,7 @@ static void check_profile(void) {
 	create_profile_dir(CHEATS_DIR);
 	create_profile_dir(PATCHES_DIR);
 	create_profile_dir(PCSX_DOT_DIR "cfg");
-	create_profile_dir("/screenshots/");
+	create_profile_dir(PCSX_DOT_DIR "/screenshots/");
 }
 
 static void check_memcards(void)
@@ -586,7 +586,7 @@ static void check_memcards(void)
 	int i;
 
 	for (i = 1; i <= 9; i++) {
-		snprintf(buf, sizeof(buf), ".%scard%d.mcd", MEMCARD_DIR, i);
+		snprintf(buf, sizeof(buf), "%scard%d.mcd", MEMCARD_DIR, i);
 
 		f = fopen(buf, "rb");
 		if (f == NULL) {
@@ -688,7 +688,7 @@ int main(int argc, char *argv[])
 		// FIXME: this recovery doesn't work, just delete bad config and bail out
 		// SysMessage("could not load plugins, retrying with defaults\n");
 		set_default_paths();
-		snprintf(path, sizeof(path), "." PCSX_DOT_DIR "%s", cfgfile_basename);
+		snprintf(path, sizeof(path), PCSX_DOT_DIR "%s", cfgfile_basename);
 		remove(path);
 		SysMessage("Failed loading plugins!");
 		return 1;
diff -uprN a/frontend/main.h b/frontend/main.h
--- a/frontend/main.h	2025-05-16 12:53:52.640207729 +0800
+++ b/frontend/main.h	2025-05-16 13:05:32.235687665 +0800
@@ -21,16 +21,16 @@
 
 #include "config.h"
 
-#define DEFAULT_MEM_CARD_1 "/.pcsx/memcards/card1.mcd"
-#define DEFAULT_MEM_CARD_2 "/.pcsx/memcards/card2.mcd"
-#define MEMCARD_DIR "/.pcsx/memcards/"
-#define PLUGINS_DIR "/.pcsx/plugins/"
-#define PLUGINS_CFG_DIR "/.pcsx/plugins/cfg/"
-#define PCSX_DOT_DIR "/.pcsx/"
-#define STATES_DIR "/.pcsx/sstates/"
-#define CHEATS_DIR "/.pcsx/cheats/"
-#define PATCHES_DIR "/.pcsx/patches/"
-#define BIOS_DIR "/bios/"
+#define DEFAULT_MEM_CARD_1 "/mnt/FunKey/.pcsx/memcards/card1.mcd"
+#define DEFAULT_MEM_CARD_2 "/mnt/FunKey/.pcsx/memcards/card2.mcd"
+#define MEMCARD_DIR "/mnt/FunKey/.pcsx/memcards/"
+#define PLUGINS_DIR "/mnt/FunKey/.pcsx/plugins/"
+#define PLUGINS_CFG_DIR "/mnt/FunKey/.pcsx/plugins/cfg/"
+#define PCSX_DOT_DIR "/mnt/FunKey/.pcsx/"
+#define STATES_DIR "/mnt/FunKey/.pcsx/sstates/"
+#define CHEATS_DIR "/mnt/FunKey/.pcsx/cheats/"
+#define PATCHES_DIR "/mnt/FunKey/.pcsx/patches/"
+#define BIOS_DIR "/mnt/FunKey/.pcsx/bios/"
 
 extern char cfgfile_basename[MAXPATHLEN];
 
diff -uprN a/frontend/menu.c b/frontend/menu.c
--- a/frontend/menu.c	2025-05-16 12:53:52.644207565 +0800
+++ b/frontend/menu.c	2025-05-16 13:23:41.839900722 +0800
@@ -498,9 +498,9 @@ static char *get_cd_label(void)
 static void make_cfg_fname(char *buf, size_t size, int is_game)
 {
 	if (is_game)
-		snprintf(buf, size, "." PCSX_DOT_DIR "cfg/%.32s-%.9s.cfg", get_cd_label(), CdromId);
+		snprintf(buf, size, PCSX_DOT_DIR "cfg/%.32s-%.9s.cfg", get_cd_label(), CdromId);
 	else
-		snprintf(buf, size, "." PCSX_DOT_DIR "%s", cfgfile_basename);
+		snprintf(buf, size, PCSX_DOT_DIR "%s", cfgfile_basename);
 }
 
 static void keys_write_all(FILE *f);
@@ -566,7 +566,7 @@ static int menu_do_last_cd_img(int is_ge
 	FILE *f;
 	int i, ret = -1;
 
-	snprintf(path, sizeof(path), "." PCSX_DOT_DIR "lastcdimg.txt");
+	snprintf(path, sizeof(path), PCSX_DOT_DIR "lastcdimg.txt");
 	f = fopen(path, is_get ? "r" : "w");
 	if (f == NULL) {
 		ret = -1;
diff -uprN a/frontend/plat_suniv.c b/frontend/plat_suniv.c
--- a/frontend/plat_suniv.c	2025-05-16 12:53:52.648207402 +0800
+++ b/frontend/plat_suniv.c	2025-05-16 09:33:15.813632445 +0800
@@ -73,21 +73,21 @@ static int psx_offset_x, psx_offset_y, p
 static int fb_offset_x, fb_offset_y;
 
 static const struct in_default_bind in_sdl_defbinds[] = {
-  { SDLK_UP,        IN_BINDTYPE_PLAYER12, DKEY_UP },
-  { SDLK_DOWN,      IN_BINDTYPE_PLAYER12, DKEY_DOWN },
-  { SDLK_LEFT,      IN_BINDTYPE_PLAYER12, DKEY_LEFT },
-  { SDLK_RIGHT,     IN_BINDTYPE_PLAYER12, DKEY_RIGHT },
-  { SDLK_LSHIFT,    IN_BINDTYPE_PLAYER12, DKEY_TRIANGLE },
-  { SDLK_LCTRL,     IN_BINDTYPE_PLAYER12, DKEY_CROSS },
-  { SDLK_LALT,      IN_BINDTYPE_PLAYER12, DKEY_CIRCLE },
-  { SDLK_SPACE,     IN_BINDTYPE_PLAYER12, DKEY_SQUARE },
-  { SDLK_RETURN,    IN_BINDTYPE_PLAYER12, DKEY_START },
-  { SDLK_ESCAPE,    IN_BINDTYPE_PLAYER12, DKEY_SELECT },
-  { SDLK_TAB,       IN_BINDTYPE_PLAYER12, DKEY_L1 },
-  { SDLK_BACKSPACE, IN_BINDTYPE_PLAYER12, DKEY_R1 },
+  { SDLK_u,        IN_BINDTYPE_PLAYER12, DKEY_UP },
+  { SDLK_d,      IN_BINDTYPE_PLAYER12, DKEY_DOWN },
+  { SDLK_l,      IN_BINDTYPE_PLAYER12, DKEY_LEFT },
+  { SDLK_r,     IN_BINDTYPE_PLAYER12, DKEY_RIGHT },
+  { SDLK_y,    IN_BINDTYPE_PLAYER12, DKEY_TRIANGLE },
+  { SDLK_b,     IN_BINDTYPE_PLAYER12, DKEY_CROSS },
+  { SDLK_a,      IN_BINDTYPE_PLAYER12, DKEY_CIRCLE },
+  { SDLK_x,     IN_BINDTYPE_PLAYER12, DKEY_SQUARE },
+  { SDLK_s,    IN_BINDTYPE_PLAYER12, DKEY_START },
+  { SDLK_k,    IN_BINDTYPE_PLAYER12, DKEY_SELECT },
+  { SDLK_m,       IN_BINDTYPE_PLAYER12, DKEY_L1 },
+  { SDLK_n, IN_BINDTYPE_PLAYER12, DKEY_R1 },
   { SDLK_e,         IN_BINDTYPE_PLAYER12, DKEY_L2 },
   { SDLK_t,         IN_BINDTYPE_PLAYER12, DKEY_R2 },
-  { SDLK_RCTRL,     IN_BINDTYPE_EMU, SACTION_ENTER_MENU },
+  { SDLK_q,     IN_BINDTYPE_EMU, SACTION_ENTER_MENU },
   { SDLK_F1,        IN_BINDTYPE_EMU, SACTION_SAVE_STATE },
   { SDLK_F2,        IN_BINDTYPE_EMU, SACTION_LOAD_STATE },
   { SDLK_F3,        IN_BINDTYPE_EMU, SACTION_PREV_SSLOT },
@@ -103,24 +103,24 @@ static const struct in_default_bind in_s
 
 const struct menu_keymap in_sdl_key_map[] =
 {
-  { SDLK_UP,        PBTN_UP },
-  { SDLK_DOWN,      PBTN_DOWN },
-  { SDLK_LEFT,      PBTN_LEFT },
-  { SDLK_RIGHT,     PBTN_RIGHT },
-  { SDLK_LALT,      PBTN_MOK },
-  { SDLK_LCTRL,     PBTN_MBACK },
-  { SDLK_SPACE,     PBTN_MA2 },
-  { SDLK_LSHIFT,    PBTN_MA3 },
-  { SDLK_TAB,       PBTN_L },
-  { SDLK_BACKSPACE, PBTN_R },
+  { SDLK_u,        PBTN_UP },
+  { SDLK_d,      PBTN_DOWN },
+  { SDLK_l,      PBTN_LEFT },
+  { SDLK_r,     PBTN_RIGHT },
+  { SDLK_a,      PBTN_MOK },
+  { SDLK_b,     PBTN_MBACK },
+  { SDLK_x,     PBTN_MA2 },
+  { SDLK_y,    PBTN_MA3 },
+  { SDLK_m,       PBTN_L },
+  { SDLK_n, PBTN_R },
 };
 
 const struct menu_keymap in_sdl_joy_map[] =
 {
-  { SDLK_UP,    PBTN_UP },
-  { SDLK_DOWN,  PBTN_DOWN },
-  { SDLK_LEFT,  PBTN_LEFT },
-  { SDLK_RIGHT, PBTN_RIGHT },
+  { SDLK_u,    PBTN_UP },
+  { SDLK_d,  PBTN_DOWN },
+  { SDLK_l,  PBTN_LEFT },
+  { SDLK_r, PBTN_RIGHT },
   { SDLK_WORLD_0, PBTN_MOK },
   { SDLK_WORLD_1, PBTN_MBACK },
   { SDLK_WORLD_2, PBTN_MA2 },
@@ -826,5 +826,4 @@ void plat_trigger_vibrate(int pad, int l
   else{
     ioctl(motordev, MIYOO_VIR_SET_MODE, ((high > 0x80) ? 0 : 1));
   }
-}
-
+}
\ No newline at end of file
